---
import Layout from '../../layouts/Layout.astro';
import ProductDetails from '../../components/ProductComponents/ProductDetails';
import RelatedProducts from '../../components/ProductComponents/RelatedProducts';
import { getAllProducts, getProductById } from '../../utils/productUtils';
import { ViewTransitions } from 'astro:transitions';
import { ChevronRight } from 'lucide-react';

type CategoryRoutes = {
  [key: string]: string;
};

const categoryRoutes: CategoryRoutes = {
  "Plantas de Interior": "/interior",
  "Plantas de Interior Fáciles": "/interior/faciles",
  "Plantas Grandes de Interior": "/interior/grandes",
  "Plantas de Poca Luz": "/interior/poca-luz",
  "Palmeras de Interior": "/interior/palmeras",
  "Plantas de Exterior": "/exterior",
  "Macetas de Interior": "/macetas",
  "Macetas de Yute": "/macetas/yute",
  "Macetas de Terracota": "/macetas/terracota",
  "Kokedamas": "/kokedamas-terrarios",
  "Terrarios": "/kokedamas-terrarios"
};

export async function getStaticPaths() {
  const allProducts = await getAllProducts();
  return allProducts.map(product => ({
    params: { id: product.id.toString() },
    props: { product },
  }));
}

const { id } = Astro.params;
const product = await getProductById(parseInt(id));

if (!product) {
  return Astro.redirect('/404');
}

const categoryUrl = product.category ? (categoryRoutes[product.category] || '/') : '/';
---

<Layout 
  title={`${product.name} - Casa Verde`} 
  description={`Detalles de ${product.name} en Casa Verde`}
>
  <ViewTransitions />
  <div class="product-page">
    <nav class="breadcrumb" aria-label="Breadcrumb">
      <ol>
        <li><a href="/">Inicio</a></li>
        <li><ChevronRight size={16} /></li>
        <li><a href={categoryUrl}>{product.category}</a></li>
        <li><ChevronRight size={16} /></li>
        <li aria-current="page">{product.name}</li>
      </ol>
    </nav>
    <ProductDetails product={product} client:load />
    <RelatedProducts productId={product.id} client:load />
  </div>
</Layout>

<style>
  .product-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .breadcrumb {
    margin-bottom: 2rem;
    font-family: "Bebas-Text", sans-serif;
    font-size: 0.9rem;
  }

  .breadcrumb ol {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  .breadcrumb li {
    display: flex;
    align-items: center;
  }

  .breadcrumb a {
    color: #2e8b57;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .breadcrumb a:hover {
    color: #236b43;
    text-decoration: underline;
  }

  .breadcrumb li:last-child {
    color: #666;
    font-weight: 600;
  }

  .breadcrumb svg {
    margin: 0 0.5rem;
    color: #666;
  }

  /* Estilos para la transición de vista */
  ::view-transition-old(product-image),
  ::view-transition-new(product-image) {
    animation-duration: 0.5s;
  }

  @media (max-width: 768px) {
    .breadcrumb {
      font-size: 0.8rem;
    }
  }
</style>

